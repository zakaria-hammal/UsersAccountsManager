@page "/ChangePassword"
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>Reset Password</PageTitle>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <label>Current Password : </label>
            <input type="password" placeholder="Current Password" @bind="model.CurrentPassword"><br><br>
            <label>New Password : </label>
            <input type="password" placeholder="New Password" @bind="model.NewPassword"><br><br>
            <button class="btn btn-primary" @onclick="@ResetPassword">Change Password</button>
        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private ChangeModel model {get; set;} = new();

    private bool isLogged{get; set;} = false;

    protected override async Task OnInitializedAsync() 
    {
        await base.OnInitializedAsync();
        Http.DefaultRequestHeaders.Accept.Clear();
        Http.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
        
        var state = await AuthStateProvider.GetAuthenticationStateAsync();

        var user = state.User.FindFirst(c => c.Type.Contains("given"))?.Value;

        model.Username = user;
    }

    private async Task ResetPassword()
    {
            
        var response = await Http.PostAsJsonAsync("api/Account/changePassword", model);

        if (response.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo("/", forceLoad: true);
        }
        
    }
} 
