@page "/upload"
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthStateProvider

<h3>Add A Profile Picture</h3>

<InputFile OnChange="HandleFileChange" accept="image/*" /><br><br>
<button @onclick="SendImage">Add Profile Picture</button>

@code {
    private IBrowserFile? File{get; set;}
    private string? user{get; set;}

    protected override async Task OnInitializedAsync() 
    {
        await base.OnInitializedAsync();
        Http.DefaultRequestHeaders.Accept.Clear();
        Http.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

        var state = await AuthStateProvider.GetAuthenticationStateAsync();
        user = state.User.FindFirst(c => c.Type.Contains("given"))?.Value;
    }
    
    private void HandleFileChange(InputFileChangeEventArgs e)
    {
        File = e.File;
    }

    private async Task SendImage()
    {
        var file = File;
        if (file != null)
        {
            var buffer = new byte[file.Size];

            await file.OpenReadStream(10485760).ReadAsync(buffer);

            var content = new MultipartFormDataContent();
            var fileContent = new ByteArrayContent(buffer);
            fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(file.ContentType);
            content.Add(new StreamContent(file.OpenReadStream(100 * 1024 * 1024)), "ImageFile", file.Name);
            content.Add(new StringContent(user), "Description");

            var response = await Http.PostAsync("api/Image/upload", content);

            if (response.IsSuccessStatusCode)
            {
                navigationManager.NavigateTo($"/Users/{user}", forceLoad: true);
            }
        }
        else
        {
            navigationManager.NavigateTo($"/Users/{user}", forceLoad: true);
        }
    }
}
